#!/bin/bash
set -e

# - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# The main cyber-dojo script.
# Delegates to cyber-dojo-inner.
# A [cyber-dojo update] does not update this script.
# Does not export any env-vars as they'd be visible to,
# and easily break, previous versions of cyber-dojo-inner
# (and scripts it extracts and runs) in regression tests.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - -

commander_tag()
{
  # There are [cyber-dojo update] tests that predate
  # the CYBER_DOJO_COMMANDER_TAG env-var being added
  # to versioner's .env file so this function is careful
  # to use the earlier CYBER_DOJO_COMMANDER_SHA.
  # It carefully gets the last match in the /app/.env file.
  # See comments in build_test_tag_publish.sh
  local -r versioner=cyberdojo/versioner:latest
  local -r env_var=$(docker run --entrypoint "" --rm ${versioner} \
    grep COMMANDER_SHA /app/.env | tail -1)
  [[ "${env_var}" =~ CYBER_DOJO_COMMANDER_SHA=(.*) ]]
  echo "${BASH_REMATCH[1]:0:7}"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - -
readonly COMMANDER_TAG="$(commander_tag)"
readonly SCRIPT=cyber-dojo-inner
readonly CYBER_DOJO_TMP_DIR="$(mktemp -d /tmp/commander.XXXXXXX)"
remove_tmp_dir() { rm -rf "${CYBER_DOJO_TMP_DIR}" > /dev/null; }
trap remove_tmp_dir INT EXIT

cd "${CYBER_DOJO_TMP_DIR}"

docker run \
  --entrypoint cat \
  --rm \
  cyberdojo/commander:${COMMANDER_TAG} \
    /app/${SCRIPT} \
      > ./${SCRIPT}

chmod 700 ./${SCRIPT}

CYBER_DOJO_COMMANDER_TAG=${COMMANDER_TAG} \
  ./${SCRIPT} "$@"
