
# Aim is for cyber-dojo script to boil down to straight delegation.
#
# ./cyber-dojo up
#
# ./cyber-dojo up --languages=james/cppu
#
# RELEASE=2.3 \
#  ./cyber-dojo up --languages=james/cppu

#!/bin/bash
set -e
readonly RELEASE=${RELEASE:-latest}
readonly VERSIONER=cyberdojo/versioner:${RELEASE}
readonly ENV_VARS=$(docker run --rm -i ${VERSIONER} sh -c 'cat /app/.env')
readonly COMMANDER_SHA=$(echo ${ENV_VARS} | grep CYBER_DOJO_COMMANDER_SHA)
readonly COMMANDER_TAG=${COMMANDER_SHA:0:7}
docker run \
   --env RELEASE=${RELEASE} \
   --env DOCKER_MACHINE_NAME \
   --env CYBER_DOJO_CUSTOM \
   --env CYBER_DOJO_EXERCISES \
   --env CYBER_DOJO_LANGUAGES \
   --env CYBER_DOJO_PORT \
   --env CYBER_DOJO_SH_ROOT="${my_dir}" \
   --env CYBER_DOJO_ENV_ROOT=/tmp/app \
   --interactive \
   --rm \
   --volume=/var/run/docker.sock:/var/run/docker.sock \
   cyberdojo/commander:${COMMANDER_TAG} \
     cyber-dojo.sh $@

# Note. Assuming cyber-dojo.sh is existing cyber-dojo script
# Note. Will I still need SH_ROOT?
# Note. Will I still need ENV_ROOT?
# Note. Passing DOCKER_MACHINE_NAME to allow commander to see if you
#       are running on ToolBox if a [start-point create] GIT_REPO_URL
#       cannot be resolved.
