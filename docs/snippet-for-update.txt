
Update could be _inside_ commander.
But better outside since the last step is for cyber-dojo to replace itself.

$ ./cyber-dojo update [RELEASE]

#!/bin/bash
set -e
shift # update

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#  Use:
#  \$ ./cyber-dojo update latest
#  \$ ./cyber-dojo update RELEASE
#  \$ ./cyber-dojo update TAG
#
#  Example 1: update to latest (the default)
#    \$ ./cyber-dojo update
#    \$ ./cyber-dojo update latest
#    Pulls latest ready for the next [cyber-dojo up] command.
#    Tags it with its release number (eg 2.3.0)
#
#  Example 2: update to a release
#    \$ cyber-dojo update 2.3.0
#    Pulls 2.3.0 and tags it with latest
#    ready for the next [cyber-dojo up] command.
#
#  Example 3: update to a non-release tag
#    \$ cyber-dojo update 23df2e8
#    Pulls 23df2e8 and tags it with latest
#    ready for the next [cyber-dojo up] command.
#    Warns it is dev only.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

RELEASE=${1:-latest}
IMAGE=cyberdojo/versioner:${RELEASE}
if [ "${RELEASE}" = 'latest' ]; then
  docker pull ${IMAGE}
fi
TAG=$(docker run --rm ${IMAGE} sh -c 'echo -n ${RELEASE}')
if [ "${TAG}" = '' ]; then
  SHA=$(docker run --rm ${IMAGE} sh -c 'echo -n ${SHA}')
  TAG=${SHA:0:7}
  echo "Warning: ${RELEASE} is dev only"
fi
docker tag ${IMAGE} cyberdojo/versioner:${TAG}
docker tag ${IMAGE} cyberdojo/versioner:latest


# The two tag commands are because you can do
# 1) ./cyber-dojo update 2.3.0
# 2) ./cyber-dojo update latest
# 3) ./cyber-dojo update 23df2e8
# And if we do (2) we need to create a non-latest tag
# because latest moves and we want to keep a local history.
# Number (3) shows that versioner is also tagging non-releases.
# And that only releases (1) also get the latest tag (2).
# This is useful for working on versioner itself.
# How to set RELEASE env-var?
# Use commit message like  [ci skip]
# Eg
# [release=2.3.1]
# Scripts will have to detect this.

# Would be nice to add colour to the help-text
# so the bash fragments in the examples stand out.
