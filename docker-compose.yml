
version: '2.2'

volumes:
  # monitoring
  grafana_data: {}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

services:

  # - - - - - - - - - - - - - - - - - - - - - - -
  # multi-threaded front-end with http caching

  nginx:
    user: root
    image: ${CYBER_DOJO_NGINX}
    init: true
    container_name: cyber-dojo-nginx
    cpu_shares: 1024
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure
    depends_on:
      - web
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/nginx.env
    ports:
      - ${CYBER_DOJO_NGINX_PORT}:80

  # - - - - - - - - - - - - - - - - - - - - - - -
  # main server (rails)

  web:
    user: nobody
    image: ${CYBER_DOJO_WEB}
    init: true
    container_name: cyber-dojo-web
    cpu_shares: 1024
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    depends_on:
      - differ
      - custom
      - exercises
      - languages
      - mapper
      - ragger
      - runner
      - saver
      - zipper
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/web.env

  # - - - - - - - - - - - - - - - - - - - - - - -
  # start-points

  custom:
    user: nobody
    image: ${CYBER_DOJO_START_POINT_CUSTOM_IMAGE}
    init: true
    container_name: cyber-dojo-custom
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure

  exercises:
    user: nobody
    image: ${CYBER_DOJO_START_POINT_EXERCISES_IMAGE}
    init: true
    container_name: cyber-dojo-exercises
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure

  languages:
    user: nobody
    image: ${CYBER_DOJO_START_POINT_LANGUAGES_IMAGE}
    init: true
    container_name: cyber-dojo-languages
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure

  # - - - - - - - - - - - - - - - - - - - - - - -
  # runner: runs cyber-dojo.sh in time-boxed container

  runner:
    user: root
    image: ${CYBER_DOJO_RUNNER}
    init: true
    container_name: cyber-dojo-runner
    cpu_shares:  1024
    read_only: true
    tmpfs: /tmp
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # - - - - - - - - - - - - - - - - - - - - - - -
  # ragger: convert runner's [stdout,stderr,status] to red/amber/green

  ragger:
    user: nobody
    image: ${CYBER_DOJO_RAGGER}
    init: true
    container_name: cyber-dojo-ragger
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 32M
    memswap_limit: 32M
    restart: on-failure
    depends_on:
      - runner

  # - - - - - - - - - - - - - - - - - - - - - - -
  # saver: stores groups/katas and code+tests for every test event

  saver:
    user: saver
    image: ${CYBER_DOJO_SAVER}
    init: true
    container_name: cyber-dojo-saver
    cpu_shares: 1024
    read_only: true
    tmpfs: /tmp
    mem_limit: 256M
    memswap_limit: 256M
    restart: on-failure
    depends_on:
      - mapper
      - prometheus
    volumes:
      - /cyber-dojo:/cyber-dojo:rw

  # - - - - - - - - - - - - - - - - - - - - - - -
  # mapper: holds storer->saver id mappings created by porter

  mapper:
    user: nobody
    image: ${CYBER_DOJO_MAPPER}
    init: true
    container_name: cyber-dojo-mapper
    cpu_shares: 128
    read_only: true
    tmpfs: /tmp
    mem_limit: 32M
    memswap_limit: 32M
    restart: on-failure
    volumes:
      - /porter:/porter:ro


  # - - - - - - - - - - - - - - - - - - - - - - -
  # differ: diffs all the files in two test events

  differ:
    user: nobody
    image: ${CYBER_DOJO_DIFFER}
    init: true
    container_name: cyber-dojo-differ
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 1G
    memswap_limit: 1G
    restart: on-failure

  # - - - - - - - - - - - - - - - - - - - - - - -
  # provides tgz files of practice sessions

  zipper:
    user: nobody
    image: ${CYBER_DOJO_ZIPPER}
    init: true
    container_name: cyber-dojo-zipper
    cpu_shares: 256
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure
    depends_on:
      - saver

  # - - - - - - - - - - - - - - - - - - - - - - -
  # monitoring

  prometheus:
    image: ${CYBER_DOJO_PROMETHEUS}
    init: true
    container_name: cyber-dojo-prometheus
    cpu_shares: 128

  grafana:
    image: ${CYBER_DOJO_GRAFANA}
    init: true
    container_name: cyber-dojo-grafana
    cpu_shares: 128
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/grafana.env
    ports:
      - '3000:3000'
