
version: '2.2'

volumes:
  languages:
    external:
      name: ${CYBER_DOJO_START_POINT_LANGUAGES}
  exercises:
    external:
      name: ${CYBER_DOJO_START_POINT_EXERCISES}
  custom:
    external:
      name: ${CYBER_DOJO_START_POINT_CUSTOM}
  # monitoring
  grafana_data: {}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

services:

  # - - - - - - - - - - - - - - - - - - - - - - -
  # multi-threaded front-end with http caching

  nginx:
    user: root
    image: cyberdojo/nginx
    init: true
    container_name: cyber-dojo-nginx
    cpu_shares: 1024
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure
    depends_on:
      - web
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/nginx.env
    ports:
      - ${CYBER_DOJO_NGINX_PORT}:80

  # - - - - - - - - - - - - - - - - - - - - - - -
  # main server (rails)

  web:
    user: nobody
    image: cyberdojo/web
    init: true
    container_name: cyber-dojo-web
    cpu_shares: 1024
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    depends_on:
      - starter
      - runner-stateful
      - runner-stateless
      - saver
      - differ
      - zipper
      - porter
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/web.env

  # - - - - - - - - - - - - - - - - - - - - - - -
  # provides setup start-points

  starter:
    user: nobody
    image: cyberdojo/starter
    init: true
    container_name: cyber-dojo-starter
    cpu_shares: 1024
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    volumes:
      - languages:${START_POINTS_ROOT}/languages:ro
      - exercises:${START_POINTS_ROOT}/exercises:ro
      - custom:${START_POINTS_ROOT}/custom:ro

  # - - - - - - - - - - - - - - - - - - - - - - -
  # runners

  runner-stateless:
    user: root
    image: cyberdojo/runner-stateless
    init: true
    container_name: cyber-dojo-runner-stateless
    cpu_shares:  1024
    read_only: true
    tmpfs: /tmp
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  runner-stateful:
    user: root
    image: cyberdojo/runner-stateful
    init: true
    container_name: cyber-dojo-runner-stateful
    cpu_shares: 1024
    read_only: true
    tmpfs: /tmp
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  collector:
    user: root
    image: cyberdojo/collector
    init: true
    container_name: cyber-dojo-collector
    cpu_shares: 256
    mem_limit: 1G
    memswap_limit: 1G
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # - - - - - - - - - - - - - - - - - - - - - - -
  # stores groups/katas and code+tests for every test event

  saver:
    user: saver
    image: cyberdojo/saver
    init: true
    container_name: cyber-dojo-saver
    read_only: true
    tmpfs: /tmp
    restart: 'no'
    depends_on:
      - prometheus
    volumes:
      - /tmp/groups:/groups:rw
      - /tmp/katas:/katas:rw

  # - - - - - - - - - - - - - - - - - - - - - - -
  # diffs all the files in two test events

  differ:
    user: nobody
    image: cyberdojo/differ
    init: true
    container_name: cyber-dojo-differ
    cpu_shares: 512
    read_only: true
    tmpfs: /tmp
    mem_limit: 1G
    memswap_limit: 1G
    restart: on-failure

  # - - - - - - - - - - - - - - - - - - - - - - -
  # provides tgz files of practice sessions

  zipper:
    user: nobody
    image: cyberdojo/zipper
    init: true
    container_name: cyber-dojo-zipper
    cpu_shares: 256
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure
    depends_on:
      - saver
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/zipper.env

  # - - - - - - - - - - - - - - - - - - - - - - -
  # ports old-style katas (from storer) into saver

  porter:
    user: porter
    image: cyberdojo/porter
    init: true
    container_name: cyber-dojo-porter
    cpu_shares: 256
    read_only: true
    tmpfs: /tmp
    mem_limit: 50M
    memswap_limit: 50M
    restart: on-failure
    volumes:
      - /tmp/id-map:/id-map:rw    
    depends_on:
      - saver
      - storer

  # - - - - - - - - - - - - - - - - - - - - - - -
  # monitoring

  prometheus:
    image: cyberdojo/prometheus
    init: true
    container_name: cyber-dojo-prometheus
    cpu_shares: 128

  grafana:
    image: cyberdojo/grafana
    init: true
    container_name: cyber-dojo-grafana
    cpu_shares: 128
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    env_file:
      - ${CYBER_DOJO_ENV_ROOT}/grafana.env
    ports:
      - '3000:3000'

  # - - - - - - - - - - - - - - - - - - - - - - -

  storer:
    user: storer
    image: cyberdojo/storer
    init: true
    container_name: cyber-dojo-storer
    cpu_shares: 1024
    read_only: true
    tmpfs: /tmp
    volumes_from:
      - container:${CYBER_DOJO_KATAS_DATA_CONTAINER}:rw
    mem_limit: 2G
    memswap_limit: 2G
    restart: on-failure
    depends_on:
      - prometheus
